一、顺序结构（完全按顺序执行语句）
输入数据-->处理数据-->输出结果

二、选择结构（根据条件判断结果来决定程序的执行
1.if语句
int i=1;
/执行条件
if(x==1){
  System.out.println("x等于1");
}

2.if-else语句
int i=1;
/执行条件
if(x==1){
  System.out.println("x等于1");
}else{
   System.out.println("x不等于1");

}
3.switch-case语句
 class Example{
  public static void main(String[] args){
      //接收用户的输入
      Scanner sc=new Scanner(System.in);
      //读取输入的值赋给变量a
      int a=sc.nextInt();
      //匹配星期
      switch (a){
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:System.out.println("工作日");break;
          case 6:
          case 7:System.out.println("休息日");break;
      //缺省处理器，用于匹配case1~case7之外的输入
      default:System.out.println("输入错误");
      }
  }
 }

三、循环结构（在给定条件成立时反复执行某程序段，知道条件不成立为止）
1.while循环
 class Example{
  public static void main(String[] args){
    int i=0;
    int sum=0;
    while(i<=10){
    sum=sum+i;
    i++;
    }
    System.out.println("1+2+...+10的值"+sum);
  }
 }
 
 2.do-while语句
  class Example{
  public static void main(String[] args){
    int i=0;
    int sum=0;
    do{sum=sum+i;
       i++;
    }
    while(i<=10){
     System.out.println("1+2+...+10的值"+sum);
    }
   
  }
 }
 
 3.for语句
   class Example{
  public static void main(String[] args){
      int sum=0;
              1     2    4
      for(int i=1,i<=10,i++){
            3
      sum=sum+i;
      }
                    5
      System.out.println("1+2+...+10的值"+sum);
  }
 }
 
 4.break与continue语句
 break语句（执行到break语句时将立即结束循环，执行循环体后面的语句）
 //计算1000~2000中能被123整除的数字
   class Example{
  public static void main(String[] args
      int i=0;
      for(i=1000,i<=2000,i++){
          //判断能否被123整除
          if(i%123==0){
          //若能整除，则跳出for循环
          break；
          }
      }
      System.out.println("第一个能被123整除的数是"+i);
  }
 }
 
 continue语句（结束本次循环，即在循环语句中执行至continue语句时，循环体中continue语句后面的语句不会被执行，将进行下一次的判断与执行）
  //计算1000~2000中能被123整除的数字
   class Example{
  public static void main(String[] args
      int i=0;
      for(i=1000,i<=2000,i++){
           //若不能被123整除，立即结束本次循环
          if(i%123！=0){
              continue;
          }
       System.out.println("能被123整除的数是"+i);
      }
  }
 }
 
